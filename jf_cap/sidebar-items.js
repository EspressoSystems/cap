initSidebarItems({"enum":[["TransactionNote","A transaction note contains a note of possibly various transaction types, including transfer, mint and freeze."],["TransactionVerifyingKey","A transaction verifying key contains a proof verification key of possibly various transaction types, including transfer, mint and freeze."]],"fn":[["calculate_fee","Compute amount of claimable transaction fee"],["derive_txns_fee_records","Derive a list of record commitments corresponding to fees from a list of transaction notes (within a block). The result is a vector of record commitment which may be further aggregated into a single one by the caller. This function is intended to be called by nodes validating blocks."],["sign_receiver_memos","Compute signature over a list of receiver memos"],["txn_batch_verify","Batch verification for transaction"]],"mod":[["bench_utils",""],["constants","Constants used across the whole library"],["errors","Error types related to transaction API"],["freeze","Generation and verification of freezing transfer notes"],["keys","Cryptographic key related data structures"],["mint","Generation and verification of mint notes (a.k.a Asset Issuance)"],["parameters","Helper functions to create, save to and fetch from files for prover/verifier parameters."],["preclude","crate prelude consisting important traits and structs"],["proof","SNARK proofs data structures, generation and verification API"],["structs","record-related data structures in transactions"],["transfer","Generation and verification of auditable anonymous transfer notes"],["utils","Utility structures and functions needed for internal purposes, writing tests or benchmarks."]],"type":[["AccMemberWitness","The proof of membership in an accumulator (Merkle tree) for an asset record"],["BaseField","type alias for scalar field of the bls curve"],["CurveParam","type alias for jubjub curve parameter"],["KeyPair","The key pair of Schnorr signature scheme"],["MerkleCommitment","Elements needed for a full commitment to MerkleTree"],["MerkleFrontier","proof sufficient, with commitment, to define sparse MerkleTree"],["MerkleLeaf","MerkleTree leaf element"],["MerkleLeafProof","MerkleTree leaf element with associated authenticated path"],["MerklePath","An authentication path of a ternary Merkle tree."],["MerkleTree","Merkle Tree."],["NodeValue","Represents the value for a node in the merkle tree"],["PairingEngine","type alias for pairing parameter"],["ScalarField","type alias for scalar field of the jubjub curve"],["Signature","The signature of Schnorr signature scheme"],["VerKey","The verification key of Schnorr signature scheme"],["VerifyingKey","plonk"]]});
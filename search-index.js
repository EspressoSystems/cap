var searchIndex = JSON.parse('{\
"jf_cap":{"doc":"API library for the <em>configurable asset policy</em> system which …","t":[13,13,13,13,4,4,13,13,11,11,11,11,11,11,0,11,11,11,11,5,11,11,11,11,11,0,0,11,11,11,11,5,11,11,11,11,11,11,11,0,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,11,0,0,0,11,11,11,11,11,11,5,0,11,11,11,11,0,11,11,11,11,11,5,11,11,0,11,11,11,11,12,12,12,12,12,12,17,17,17,17,17,17,5,5,5,5,5,5,5,5,5,5,5,16,8,3,16,16,18,16,16,18,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,5,0,0,5,5,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,3,3,3,3,3,3,3,3,13,4,13,3,3,13,4,3,3,3,3,3,13,3,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,12,11,11,11,2,5,0,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11],"n":["Freeze","Freeze","Mint","Mint","TransactionNote","TransactionVerifyingKey","Transfer","Transfer","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","bench_utils","borrow","borrow","borrow_mut","borrow_mut","calculate_fee","clone","clone","clone_into","clone_into","commit","config","constants","deref","deref","deref_mut","deref_mut","derive_txns_fee_records","deserialize","deserialize","deserialize","deserialize","drop","drop","eq","errors","fmt","fmt","fmt","freeze","from","from","from","from","from","from_str","get_hash","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","keys","merkle_root","mint","ne","nullifiers","output_commitments","output_len","parameters","prelude","proof","serialize","serialize","serialize","serialize","serialized_size","serialized_size","sign_receiver_memos","structs","tag","to_owned","to_owned","to_string","transfer","try_from","try_from","try_from","try_into","try_into","txn_batch_verify","type_id","type_id","utils","validity_proof","verify_receiver_memos_signature","vzip","vzip","0","0","0","0","0","0","BATCH_VERIF","GEN","NUM_INPUTS_RANGE","NUM_OUTPUTS_RANGE","TREE_DEPTH","VERIFY","compute_sizes","compute_title_batch","compute_title_simple","full_path","get_builder_freeze","get_builder_mint","get_builder_transfer","get_key_pairs","save_result_to_file_batch","save_result_to_file_simple","save_results_to_file","BaseField","CapConfig","Config","EmbeddedCurveParam","EmbeddedCurveScalarField","PER_ATTR_BYTE_CAPACITY","PairingCurve","PairingCurveParam","SCALAR_REPR_BYTE_LEN","ScalarField","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","dummy_asset_code","eq","fmt","from","init","into","into_any","into_any_arc","into_any_rc","native_asset_code","to_owned","try_from","try_into","type_id","vzip","ATTRS_LEN","DOM_SEP_DOMESTIC_ASSET","DOM_SEP_FOREIGN_ASSET","MAX_TIMESTAMP_LEN","REVEAL_MAP_LEN","VIEWABLE_DATA_LEN","ArkSerializationError","DeserializationError","DeserializationError","FailedAssetCodeVerification","FailedConstraintSystem","FailedCredentialCreation","FailedCredentialVerification","FailedPrimitives","FailedReceiverMemoSignature","FailedSerialization","FailedSnark","FailedTransactionVerification","FailedTxMemoSignature","FailedViewableMemoDecryption","IncorrectFee","InternalError","InvalidAttribute","InvalidParameter","IoError","ParametersGenerationError","SerdeError","TxnApiError","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","FreezeAuxInfo","FreezeNote","FreezeNoteInput","__clone_box","__clone_box","__clone_box","acc_member_witness","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","aux_info","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","drop","drop","drop","eq","eq","fee","fmt","fmt","fmt","from","from","from","generate","get_hash","get_hash","hash","hash","init","init","init","input_nullifiers","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","keypair","merkle_root","output_commitments","proof","ro","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","txn_memo_ver_key","type_id","type_id","type_id","uncompressed_size","uncompressed_size","verify","vzip","vzip","vzip","CredIssuerKeyPair","CredIssuerPubKey","FreezerKeyPair","FreezerPubKey","UserAddress","UserKeyPair","UserPubKey","ViewerKeyPair","ViewerPubKey","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","address","address","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","drop","drop","drop","drop","drop","drop","drop","drop","drop","enc_key","encrypt","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","generate","generate","generate","generate","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","internal","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","nullify","nullify","open_mint_viewing_memo","open_transfer_viewing_memo","pub_key","pub_key","pub_key","pub_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","sign","tag","tag","tag","tag","tag","tag","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","verify_sig","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MintAuxInfo","MintNote","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","aux_info","borrow","borrow","borrow_mut","borrow_mut","chg_comm","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","drop","drop","eq","eq","fee","fmt","fmt","from","from","generate","get_hash","get_hash","hash","hash","init","init","input_nullifier","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","merkle_root","mint_amount","mint_asset_def","mint_comm","mint_internal_asset_code","proof","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","to_owned","to_owned","try_from","try_from","try_into","try_into","txn_memo_ver_key","type_id","type_id","uncompressed_size","uncompressed_size","verify","viewing_memo","vzip","vzip","load_freeze_proving_key","load_freeze_verifying_key","load_mint_proving_key","load_mint_verifying_key","load_transfer_proving_key","load_transfer_verifying_key","load_universal_parameter","store_freeze_proving_key","store_freeze_verifying_key","store_mint_proving_key","store_mint_verifying_key","store_transfer_proving_key","store_transfer_verifying_key","store_universal_parameter_for_demo","FreezePublicInput","MintPublicInput","TransactionNote","TransactionVerifyingKey","TransferNote","TransferNoteAuxInfo","TransferNoteInput","TransferPublicInput","calculate_fee","derive_txns_fee_records","sign_receiver_memos","txn_batch_verify","universal_setup","universal_setup_for_staging","freeze","load_srs","mint","transfer","universal_setup","universal_setup_for_staging","FreezeProvingKey","FreezePublicInput","FreezeVerifyingKey","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","drop","drop","drop","eq","eq","fee","fmt","fmt","fmt","from","from","from","from","from","init","init","init","input_nullifiers","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","merkle_root","native_asset_code","ne","ne","num_input","num_input","num_output","num_output","output_commitments","preprocess","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uncompressed_size","uncompressed_size","vzip","vzip","vzip","MintProvingKey","MintPublicInput","MintVerifyingKey","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chg_rc","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","drop","drop","drop","eq","eq","fee","fmt","fmt","fmt","from","from","from","from","from","init","init","init","input_nullifier","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","merkle_root","mint_ac","mint_amount","mint_internal_ac","mint_policy","mint_rc","native_asset_code","ne","ne","preprocess","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uncompressed_size","uncompressed_size","viewing_memo","vzip","vzip","vzip","TransferProvingKey","TransferPublicInput","TransferVerifyingKey","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","drop","drop","drop","eq","eq","fee","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","input_nullifiers","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","merkle_root","n_inputs","n_outputs","native_asset_code","ne","ne","num_input","num_input","num_output","num_output","output_commitments","preprocess","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","to_owned","to_owned","to_owned","tree_depth","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uncompressed_size","uncompressed_size","valid_until","verifying_key","viewing_memo","vzip","vzip","vzip","Amount","AssetCode","AssetCodeSeed","AssetDefinition","AssetPolicy","BlindFactor","ExpirableCredential","FeeInput","Freeze","FreezeFlag","Frozen","IdentityAttribute","InternalAssetCode","Mint","NoteType","Nullifier","ReceiverMemo","RecordCommitment","RecordOpening","RevealMap","Transfer","TxnFeeInfo","Unfrozen","ViewableData","ViewableMemo","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","acc_member_witness","add","add_assign","amount","amount","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","asset_code","asset_def","attributes","blind","blinding_factor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","code","create","cred_creator_pub_key","decrypt","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","div","div_assign","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy","dummy","dummy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","expiry","fee_amount","fee_chg_ro","fee_input","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze_flag","freezer_pub_key","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_field_element","from_ro","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_vec","generate","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","internal","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_amount_revealed","is_blinding_factor_revealed","is_cred_creator_pub_key_set","is_dummy","is_dummy","is_expired","is_freezer_pub_key_set","is_native","is_reveal_threshold_set","is_user_address_revealed","is_viewer_pub_key_set","mul","mul_assign","native","native","ne","ne","ne","new","new","new","new","new","new","new","new_domestic","new_foreign","owner_keypair","partial_cmp","partial_cmp","partial_cmp","policy_ref","pub_key","rand","rand_for_test","rand_for_test","rand_for_test","rand_for_test","random","random_for_test","rem","rem_assign","reveal_all","reveal_all_attributes","reveal_amount","reveal_blinding_factor","reveal_ith_attribute","reveal_map","reveal_record_opening","reveal_threshold","reveal_user_address","ro","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","set_cred_creator_pub_key","set_freezer_pub_key","set_reveal_map_for_test","set_reveal_threshold","set_viewer_pub_key","sub","sub_assign","sum","tag","tag","tag","tag","tag","tag","tag","tag","tag","tag","to_field_element","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_scalar","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","user_address","value","verify_foreign","viewer_pub_key","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AuxInfo","TransferNote","TransferNoteInput","__clone_box","__clone_box","__clone_box","acc_member_witness","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","aux_info","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cred","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","drop","drop","drop","eq","eq","extra_proof_bound_data","fee","fmt","fmt","fmt","from","from","from","from","generate_native","generate_non_native","get_hash","get_hash","hash","hash","init","init","init","inputs_nullifiers","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","merkle_root","output_commitments","owner_keypair","proof","ro","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","txn_memo_ver_key","type_id","type_id","type_id","uncompressed_size","uncompressed_size","valid_until","verify","viewing_memo","vzip","vzip","vzip","TxnsParams","compute_universal_param_size","params_builder","FreezeParamsBuilder","MintParamsBuilder","TransferParamsBuilder","TxnsParams","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_freeze_note","build_mint_note","build_transfer_note","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fee_chg_ro","fmt","fmt","fmt","from","from","from","from","generate_txns","init","init","init","init","input_creds","input_keypairs","input_ros","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","merkle_root","new","new","new_non_native","output_ros","root","set_input_amounts","set_input_creds","set_output_amounts","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","txns","type_id","type_id","type_id","type_id","valid_until","verifying_keys","vzip","vzip","vzip","vzip"],"q":["jf_cap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jf_cap::TransactionNote","","","jf_cap::TransactionVerifyingKey","","","jf_cap::bench_utils","","","","","","","","","","","","","","","","","jf_cap::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jf_cap::constants","","","","","","jf_cap::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jf_cap::errors::DeserializationError","","jf_cap::errors::TxnApiError","","","","","","","","","","","","","","","","","jf_cap::freeze","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jf_cap::keysjf_cap::mint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jf_cap::parameters","","","","","","","","","","","","","","jf_cap::prelude","","","","","","","","","","","","","","jf_cap::proof","","","","","","jf_cap::proof::freeze","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jf_cap::proof::mint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jf_cap::proof::transfer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jf_cap::structsjf_cap::transfer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jf_cap::utils","","","jf_cap::utils::params_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["a freeze/unfreeze note","verification key for validity proof in freeze note","a mint (asset issuance) note","verification key for validity proof in mint note","A transaction note contains a note of possibly various …","A transaction verifying key contains a proof verification …","a transfer note","verification key for validity proof in transfer note","","","","","","","","","","","","Compute amount of claimable transaction fee","","","","","","Configuration","Constants used across the whole library","","","","","Derive a list of record commitments corresponding to fees …","","","","","","","","Error types related to transaction API","","","","Generation and verification of freezing transfer notes","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Cryptographic key related data structures","Retrieve merkle root","Generation and verification of mint notes (a.k.a Asset …","","Retrieve transaction input nullifiers","Retrieve transaction output record commitments","Retrieve number of transaction outputs in the note","Helper functions to create, save to and fetch from files …","crate prelude consisting important traits and structs","SNARK proofs data structures, generation and verification …","","","","","","","Compute signature over a list of receiver memos","record-related data structures in transactions","","","","","Generation and verification of user configurable transfer …","","","","","","Batch verification for transaction","","","Utility structures and functions needed for internal …","Retrieve validity proof","Verify signature of Receiver Memos associated with the …","","","","","","","","","","","","","","","","","","","","","","","","","","Base field which our CAP proof will be expressed in","Configuration for CAP system","A concrete instantation of <code>CapConfig</code>","Curve parameter for Jubjub curve embedded in <code>PairingCurve</code>","Scalar field of jubjub curve","number of byte can each <code>identityAttribute</code> take.","Pairing-friendly curve the CAP proof will be generated over","Curve parameter for <code>PairingCurve</code>","Length of a <code>ScalarField</code> representation in bytes","Scalar field over which CAP circuit is over","","","","","","","","","","","Dummy asset code, cannot be 0 (default) or 1(native)","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Native asset code, cannot be 0 as then code is identical …","","","","","","the number of identity attributes","Minted Asset Code domain separator","External Asset Code domain separator","The upper bound on the time unit difference between expiry …","Maximum length of a reveal map := (b_0,b_1,b_2, attr_map) …","length in scalars of decrypted transfer viewing …","Failed to deserialize with Arkworks: {0}","Errors from deserialization.","Failed to deserialize: {0}","AssetCode verification failed: {0}","Constraint System err: {0:?}","Credential creation failed: {0}","Credential verification failed: {0}","Crypto primitives failed: {0}","Failed ReceiverMemo Signature: {0}","Failed Serialization: {0}","Plonk SNARK failed: {0}","Failed Transaction Verification: {0}","Failed Transaction Memo Signature: {0}“","Failed ViewableMemo Decryption: {0}","Incorrect fee collection: {0}","‼ ️Internal error! Please report to Crypto Team …","Invalid Attribute code","Invalid parameters: {0}","I/O failure: {0}","Parameters generation error:{0}","Failed to deserialize with Serde: {0}","All possible categories of error from Transaction API","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auxiliary info of FreezeNote: includes merkle root and fee","Freezing note structure","All necessary information for each freezing input record …","","","","Accumulator membership proof (namely the Merkle proof) of …","","","","","","","Auxiliary information (merkle root, fee)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","proposed fee in native asset type for the transfer","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generates a freezing note. (See “tests/examples.rs” …","","","","","","","","nullifiers for freezing/fee inputs","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Reference of the freezer’s freezing key pair.","Accumulator state","generated output commitments","proof of freezing","Record opening of the input record.","","","","","","","","","","","","","","","","","","","","Transaction memos signature verification key (usually used …","","","","","","Freezing note verification method","","","","Key pair for the credential creator","Public key for the credential creator","Key pair for the freezer","Public key for the freezer","Public address for a user to send assets to/from.","A key pair for the user who owns and can consume records …","The public key of a <code>UserKeyPair</code>","Key pair for the viewer","Public key for the viewer","","","","","","","","","","Get public key address field","Getter for public address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clone the Encryption key. Enc key does not impl Copy so we …","Encrypt a message with authenticated label using AEAD.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Generate a new user key pair","Generate a new key pair","Generate a new key pair","Generate a new key pair","","","","","","","","","","","","","","","","","","","","","","Returns the internal point representation","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructor","Nullify an Asset Record Commitment (RC)","Nullify an Asset Record Commitment (RC)","Open MintNote ViewableMemo intoViewableData for new minted …","Open ViewableMemo into input and output vectors …","Getter for the user public key","Getter for the public key","Getter for the public key","Getter for the public key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sign an arbitrary message using the address spending key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify a signature","","","","","","","","","","Auxiliary info of <code>MintNote</code>","Asset issuance/Mint note structure for single newly minted …","","","","","","","auxiliary information","","","","","output commitment for the fee change","","","","","","","","","","","","","","","","","","","","","Proposed transaction fee in native asset type","","","Returns the argument unchanged.","Returns the argument unchanged.","Generate a mint note.","","","","","","","nullifier for the input (i.e. transaction fee record)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Merkle tree accumulator root","the amount of the minted asset","the asset definition of the asset","output commitment for the minted asset","the asset code","the validity proof of this note","","","","","","","","","","","","","","","","","Transaction memos signature verification key (usually used …","","","","","Verifying a Mint note.","memo for policy compliance specified for the designated …","","","Load the freeze proving key from <code>src</code> file","Load the freeze verifying key from <code>src</code> file","Load the mint proving key from <code>src</code> file","Load the mint verifying key from <code>src</code> file","Load the transfer proving key from <code>src</code> file","Load the transfer verifying key from <code>src</code> file","Load universal parameter from a file.","Create and store freeze prover’s proving key","Create and store freeze verifier’s verifying key","Create and store mint prover’s proving key","Create and store mint verifier’s verifying key","Create and store transfer prover’s proving key","Create and store transfer verifier’s verifying key","Create and store universal parameter in a file.","","","","","","","","","","","","","","","This module contains functions and data structures for","Use Common Reference String parameters from Aztec’s MPC …","This module contains functions and data structures for","This module contains functions and data structures for","One-time universal setup for parameters to be used in …","load Aztec’s universal setup CRS A unified API for SRS …","Key for proving the validity of a Freeze note during asset …","Struct for the public input of a freeze witness","Key for verifying the validity of a Freeze note during …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","transaction fee to pay","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","nullifiers of input records","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","record merkle tree root","native asset code","","","Getter for number of input (fee input included)","Getter for number of input (fee input included)","Getter for number of output (fee change output included)","Getter for number of output (fee change output included)","commitments of output records","One-time preprocess of the Freezing transaction circuit, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Key for proving the validity of a Mint note during asset …","Struct for the public input of a mint witness","Key for verifying the validity of a Mint note during asset …","","","","","","","","","","","","","","","","commitment of the fee change record","","","","","","","","","","","","","","","","","","","","","","","","","","amount of fee to pay","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","nullifier of the fee input record","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","record merkle tree root","minted asset code","minted amount","minted internal asset code","minted asset policy","commitment of the minted record","native asset code","","","One-time preprocess of the Mint transaction circuit, …","","","","","","","","","","","","","","","","","","","","","","","","","memo for viewer","","","","Key for computing the proof associated to a Transfer note","Public inputs of a transfer transaction Struct for the …","Key for verifying a Transfer note Verifying key of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","transaction fee to pay","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","nullifiers of input records","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","record merkle tree root","num of inputs (incl. fee input)","num of outputs (incl. fee change output)","native asset code","","","Getter for number of input (fee input included)","Getter for number of input (fee input included)","Getter for number of output (fee change output included)","Getter for number of output (fee change output included)","commitments of output commitments","One-time preprocess of the Transfer transaction circuit, …","","","","","","","","","","","","","","record merkle tree depth","","","","","","","","","","","","expiry of credentials","SNARK verification key","memo for viewer","","","","Record Amount type","Asset code structure","The random seed used in AssetCode derivation","Asset Definition","Policies related to asset record","The blind factor used to produce a hiding commitment","A credential with expiry created by a credential creator …","All necessary information for the input record that is …","Freeze note","Flag indicating whether records is frozen or not","Record can only be unfrozen","An identity attribute of a user, usually attested via …","A unique identifier/code for an asset type","Mint note","Enum for each type of note","The nullifier represents a spent/consumed asset record","The proof of membership in an accumulator (Merkle tree) …","Asset record to be published","The opening of an asset record, containing all fields (and …","A bitmap indicating which of the following fields are to …","Transfer note","Fee structure containing fee input spending info, fee to …","Record is spendable or frozable","Transfer ViewableMemo decrypted","Memos for viewers such as viewers required by the asset …","","","","","","","","","","","","","","","","","","","","Accumulator membership proof (i.e. Merkle Proof) of the …","","","value","tracked amount","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","asset code of the associated policy","asset definition","visible attributes","record commitment blinding factor","tracked blinding factor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","asset code as unique id code","Issue an credential for a list of attributes with an …","Reference to credential creator public key","Decrypts the receiver memo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the AssetCode assigned for a dummy record","Return the dummy record asset definition: code is 2, and …","Create a new dummy record. Returns record’s “spending…","","","","","","","","","","","","","","","","","","Retrieve expiry value","Fee to pay","Fee change record opening","Fee input spending info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flag indicating if the record is frozen (true) or not …","Reference to freezer public key","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","converting the record commitment to a field element","Create a new ReceiverMemo from an Record Opening.","","","","","","","","","","","","Generate a vector of Amount from a u128 vector","sample a new seed for asset code generation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the internal reveal map representation","Getter for internal ciphertext","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if the policy is set to reveal amount","Check if the policy is set to reveal blinding factor","True if credential creator public key is not dummy, false …","returns true if it is a dummy asset, false otherwise","True if dummy record, false otherwise","Returns true if the credential expired, false otherwise","True if freezer public key is not dummy, false otherwise","returns true if it is a native asset, false otherwise","True if <code>reveal_threshold</code> is not the default value, false …","Check if the policy is set to reveal user address","True if viewer public key is not the default key, false …","","","Return the AssetCode assigned for the native asset","Return native asset definition: code is 1, and policy is …","","","","Create a new Fee struct from fee input and fee to pay","Derive an Asset code from its seed and digest <code>seed</code>:  only …","Create a <code>RevealMap</code> with internal representation. <strong>USE WITH </strong>…","Create a new <code>AssetDefinition</code> with specified asset code and …","Create a new RecordOpening with a random blind factor","Create a new <code>IdentityAttribute</code> from its value in bytes.","Construct a viewing memo directly from internal ciphertext.","Derive a domestic cap Asset code from its seed and digest …","Derive asset code from a foreign tokens (e.g. an Ethereum …","Reference of owner’s key pair","","","","Get reference to policy","owner public key","Generate a random blind factor","Generate a random reveal map","generates a random AssetPolicy","Create a new random asset definition","Create a random record opening. Only used for testing.","Generate a random asset code Returns the asset code …","Generate a random nullifier","","","Set policy to reveal user address, amount, record …","Set policy to reveal all identity attributes to viewer …","Set policy to reveal amount to viewer Return …","Set policy to reveal record commitment blinding factor to …","Set policy to reveal ith identity attribute to viewer …","Getter for the reveal map <strong>USE WITH CAUTION</strong>: in most cases, …","Set policy to reveal user address, amount and record …","Referecne to revealing threshold","Set policy to reveal user address to viewer Return …","Record opening","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the credential creator public key","Set the freezer public key","Set the reveal map directly! <strong>USE WITH CAUTION!</strong>: since you …","Set revealing threshold policy","Set the viewer public key","","","","","","","","","","","","","","converting the record commitment to a field element","","","","","","","","","","","","","","","","","","","","Convert to a scalar representation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","visible user address","Getter for the attribute value in bytes.","Verify that asset code is a foreign derived from a non cap …","Reference to viewer public key","","","","","","","","","","","","","","","","","","","","","Auxiliary info of TransferNote: includes merkle root, …","Anonymous Transfer note structure for single sender, …","All necessary information for each input record in the …","","","","Accumulator membership proof (namely the Merkle proof) of …","","","","","","","Auxiliary information (merkle root, native asset, fee, …","","","","","","","","","","","","","The identity credential of the user. Optional, only needed …","","","","","","","","","","","","","","","","","","","","Additional data bound to <code>TransferValidityProof</code>","proposed fee in native asset type for the transfer","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Generate a note for transfering native asset","Generate a note for transfering non-native asset","","","","","","","","nullifier for inputs","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Accumulator state","generated output commitments","Reference of the record owner’s key pair.","proof of spending and policy compliance","Record opening of the input record.","","","","","","","","","","","","","","","","","","","","Transaction memos signature verification key (usually used …","","","","","","A projected future timestamp that the snark proof should …","Anonymous transfer note verification method","Memo generated for policy compliance","","","","","Computes the size of the universal parameters given the …","Utilities used for tests and benchmarks.","Struct containing the parameters needed to build a Freeze …","Struct containing the parameters needed to build a Mint …","Struct that allows to build Transfer notes parameters","Parameters <strong>for testing only</strong>!","","","","","","","","","","","","","","","","","","","","Build the note given the parameters, a proving key and a …","Build the note given the parameters and a proving key","Build a transfer note","","","","","","","","","","","","","","","","","","","fee change record","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Randomly generate a list of transaction of different types","","","","","List of credentials","List of input key pairs","Input records","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","these txns are prove against this <code>merkle_root</code>","Generate the parameters for a Mint note","Instantiate a new FreezeParamsBuilder","Create  non native Transfer note parameters","Output records","Root of the Merkle tree","Define the input amounts of a Transfer note","Set the input credentials","Define the outputs amounts of a Transfer note","","","","","","","","","","","","transaction notes generated","","","","","these txns are valid until <code>valid_until</code>","verifying keys for transaction validity proofs","","","",""],"i":[8,9,8,9,0,0,8,9,8,9,8,9,8,9,0,8,9,8,9,0,8,9,8,9,8,0,0,8,9,8,9,0,8,8,9,9,8,9,8,0,8,9,9,0,8,8,8,8,9,9,8,8,8,9,8,9,8,9,8,9,8,9,0,8,0,8,8,8,8,0,0,0,8,8,9,9,8,9,0,0,9,8,9,9,0,8,9,9,8,9,0,8,9,0,8,8,8,9,103,104,105,106,107,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,7,7,7,7,7,7,7,47,47,47,47,47,47,47,47,47,47,7,47,47,47,47,47,47,47,47,7,47,47,47,47,47,0,0,0,0,0,0,49,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,49,0,4,49,4,49,4,49,4,49,4,49,4,49,4,49,4,4,49,49,4,4,4,4,49,4,49,4,49,4,49,4,49,4,49,4,49,4,49,4,49,4,49,4,49,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,0,0,0,20,51,52,52,20,51,52,20,51,52,20,20,51,52,20,51,52,20,51,52,20,51,52,20,51,52,20,51,52,20,20,51,51,20,51,20,51,20,51,52,20,51,51,20,51,52,20,51,52,20,20,51,20,51,20,51,52,20,20,51,52,20,51,52,20,51,52,20,51,52,52,51,20,20,52,20,20,51,51,20,51,20,51,20,51,20,51,52,20,51,52,20,51,52,51,20,51,52,20,51,20,20,51,52,0,0,0,0,0,0,0,0,0,59,58,39,60,61,62,42,63,40,58,39,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,63,40,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,59,59,58,58,39,39,60,60,61,61,62,62,42,42,63,63,40,40,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,58,58,59,58,60,62,63,40,59,58,58,39,39,60,60,61,61,62,62,42,42,63,63,40,40,59,58,39,60,61,62,42,63,40,58,39,60,61,62,42,63,40,39,61,42,40,59,58,60,62,63,40,59,58,60,62,63,40,59,58,39,60,61,62,42,63,40,59,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,58,39,40,42,42,39,61,42,40,59,59,58,58,39,39,60,60,61,61,62,62,42,42,63,63,40,40,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,39,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,58,39,60,61,62,42,63,40,59,58,58,39,39,60,60,61,61,62,62,42,42,63,63,40,40,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,59,58,39,60,61,62,42,63,40,58,59,58,39,60,61,62,42,63,40,0,0,22,69,22,69,22,69,22,22,69,22,69,22,22,69,22,69,22,69,22,69,22,22,69,69,22,69,22,69,22,69,22,69,69,22,69,22,69,22,22,69,22,69,22,69,22,22,69,22,69,22,69,22,69,69,22,22,22,22,22,22,22,69,69,22,69,22,69,22,69,22,69,22,69,22,69,69,22,69,22,69,22,22,22,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,57,79,55,57,79,55,57,79,55,57,79,55,57,79,55,57,79,55,57,79,55,57,79,55,57,79,55,55,57,57,55,57,55,57,55,57,79,55,57,79,55,57,79,55,55,57,57,79,55,57,79,79,55,57,79,55,57,79,55,57,79,55,57,79,79,79,55,57,55,57,55,57,79,0,55,55,57,57,55,57,55,57,55,57,55,57,79,55,57,79,55,57,79,55,57,79,55,57,55,57,79,0,0,0,72,73,81,72,73,81,72,73,81,72,73,81,72,73,81,81,72,73,81,72,73,81,72,73,81,72,73,81,72,72,73,73,72,73,72,73,72,73,81,72,73,81,72,73,81,72,72,73,73,81,72,73,81,81,72,73,81,72,73,81,72,73,81,72,73,81,81,81,81,81,81,81,81,72,73,0,72,72,73,73,72,73,72,73,72,73,72,73,81,72,73,81,72,73,81,72,73,81,72,73,81,72,73,81,0,0,0,76,77,82,76,77,82,76,77,82,76,77,82,76,77,82,76,77,82,76,77,82,76,77,82,76,77,82,76,76,77,77,76,77,76,77,76,77,82,76,77,82,76,77,82,76,76,77,77,77,82,76,77,82,82,76,77,82,76,77,82,76,77,82,76,77,82,82,77,77,82,76,77,76,77,76,77,82,0,76,76,77,77,76,77,76,77,76,77,76,77,82,77,76,77,82,76,77,82,76,77,82,76,77,82,77,82,76,77,82,0,0,0,0,0,0,0,0,83,0,88,0,0,83,0,0,0,0,0,0,83,0,88,0,0,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,93,3,3,70,67,54,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,54,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,67,70,67,70,67,54,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,54,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,3,48,31,68,90,86,92,71,84,3,48,85,86,68,87,12,88,70,89,54,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,54,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,71,71,84,84,3,3,48,48,85,85,86,86,68,68,87,87,31,31,12,12,88,88,70,70,89,89,90,90,91,91,92,92,71,84,48,86,68,87,31,12,70,89,90,91,92,71,84,48,86,68,87,31,12,70,89,90,91,92,3,3,54,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,48,68,70,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,90,54,54,54,83,71,71,84,84,3,3,3,48,48,85,86,68,68,87,87,31,31,12,12,88,70,89,89,90,91,91,67,92,92,93,70,86,54,83,71,84,3,3,3,3,3,48,85,85,86,68,87,31,12,12,88,70,89,90,91,67,92,93,12,92,71,84,3,48,68,87,31,12,89,91,92,3,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,92,84,3,48,85,86,68,87,31,12,88,70,89,90,91,92,54,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,85,91,54,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,54,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,54,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,54,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,86,86,86,68,70,90,86,68,86,86,86,3,3,48,68,3,85,92,54,84,85,68,70,89,91,48,48,93,3,48,31,68,70,87,85,86,68,70,48,31,3,3,86,86,86,86,86,86,86,86,86,93,71,71,84,84,3,3,48,48,85,85,86,86,68,68,87,87,31,31,12,12,88,88,70,70,89,89,90,90,91,91,92,92,71,84,48,86,68,87,31,12,70,89,90,91,92,71,84,48,86,68,87,31,12,70,89,90,91,92,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,92,86,86,86,86,86,3,3,3,71,84,48,68,87,31,12,89,91,92,12,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,85,71,84,3,48,68,87,31,12,89,91,92,54,83,71,71,84,84,3,3,48,48,85,86,68,68,87,87,31,31,12,12,88,70,89,89,90,91,91,67,92,92,93,54,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,54,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,71,84,48,86,68,87,31,12,70,89,90,91,92,67,89,48,86,54,83,71,84,3,48,85,86,68,87,31,12,88,70,89,90,91,67,92,93,0,0,0,21,100,101,101,21,100,101,21,100,101,21,21,100,101,21,100,101,21,100,101,21,100,101,101,21,100,101,21,100,101,21,21,100,100,21,100,21,100,21,100,101,21,100,100,100,21,100,101,21,100,101,101,21,21,21,100,21,100,21,100,101,21,21,100,101,21,100,101,21,100,101,21,100,101,100,21,101,21,101,21,21,100,100,21,100,21,100,21,100,21,100,101,21,100,101,21,100,101,100,21,100,101,21,100,100,21,21,21,100,101,0,0,0,0,0,0,0,102,43,41,44,102,43,41,44,102,43,41,44,102,43,41,44,102,43,41,41,43,44,102,43,41,102,43,41,44,102,43,41,44,102,43,41,44,102,43,41,44,102,43,41,44,102,43,41,102,44,102,43,41,44,44,44,44,102,43,41,44,102,43,41,44,43,41,44,102,43,41,102,43,41,44,44,44,44,44,44,102,43,41,44,102,43,41,44,102,43,41,102,44,102,43,41,102,102,44,102,43,41],"f":[0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[[8,[[0,[6,7]]]]],[[8,[[0,[6,7]]]]]],[[[9,[[0,[6,7]]]]],[[9,[[0,[6,7]]]]]],[[]],[[]],[[[8,[7]]],[[10,[[8,[7]]]]]],0,0,[11],[11],[11],[11],[[],[[5,[[13,[[12,[7]]]],4]]]],[[],[[5,[[8,[7]],14]]]],[[],[[5,[[8,[7]]]]]],[[],[[5,[[9,[7]],14]]]],[[],[[5,[[9,[7]]]]]],[11],[11],[[[8,[[0,[15,7]]]],8],16],0,[[[8,[[0,[17,7]]]],18],19],[[[9,[[0,[17,7]]]],18],19],[[[9,[7]],18],19],0,[[[20,[7]]],[[8,[7]]]],[[[21,[7]]],[[8,[7]]]],[[[22,[7]]],[[8,[7]]]],[[]],[[]],[23,[[5,[[9,[7]]]]]],[[],24],[[[8,[[0,[25,7]]]]]],[[],11],[[],11],[[]],[[]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],0,[[[8,[7]]],30],0,[[[8,[[0,[15,7]]]],8],16],[[[8,[7]]],[[13,[[31,[7]]]]]],[[[8,[7]]],[[13,[[12,[7]]]]]],[[[8,[7]]],11],0,0,0,[[[8,[7]]],5],[[[8,[7]]],[[5,[14]]]],[[[9,[7]]],[[5,[14]]]],[[[9,[7]]],5],[[[8,[7]]],11],[[[9,[7]]],11],[32,[[5,[33,4]]]],0,[[],34],[[]],[[]],[[],34],0,[[],5],[[],5],[[[35,[[9,[7]]]]],[[5,[[9,[7]]]]]],[[],5],[[],5],[24,[[5,[4]]]],[[],36],[[],36],0,[[[8,[7]]],37],[[[8,[7]],33],[[5,[4]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[23,11,11,38,11],34],[[23,11,11,38,11,11,11,11,11],34],[[23,23],34],[[39,[13,[40]],11,38],[[41,[7]]]],[[39,39,42,38],[[43,[7]]]],[[11,11,38],[[44,[7]]]],[11,[[13,[[39,[7]]]]]],[[[13,[34]],23],[[5,[[27,[45]]]]]],[[[13,[34]],23],[[5,[[27,[45]]]]]],[[[13,[34]],23,46],[[5,[[27,[45]]]]]],0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],[47,47],[[]],[11],[11],[11],[[],48],[[47,47],16],[[47,18],19],[[]],[[],11],[[]],[[[27,[26]]],[[27,[2,26]]]],[28,[[28,[2]]]],[29,[[29,[2]]]],[[],48],[[]],[[],5],[[],5],[[],36],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[[4,18],19],[[4,18],19],[[49,18],19],[[49,18],19],[[]],[50,4],[49,4],[14,4],[[]],[[],11],[[],11],[[]],[[]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[[],34],[[],34],[[],5],[[],5],[[],5],[[],5],[[],36],[[],36],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[7]]],[[20,[7]]]],[[[51,[7]]],[[51,[7]]]],[[[52,[[0,[6,7]]]]],[[52,[[0,[6,7]]]]]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[53,[[5,[[20,[7]],14]]]],[[],[[5,[[20,[7]]]]]],[53,[[5,[[51,[7]],14]]]],[[],[[5,[[51,[7]]]]]],[53,[[5,[[20,[7]],14]]]],[53,[[5,[[51,[7]],14]]]],[53,[[5,[[20,[7]],14]]]],[53,[[5,[[51,[7]],14]]]],[11],[11],[11],[[[20,[7]],[20,[7]]],16],[[[51,[7]],[51,[7]]],16],0,[[[20,[7]],18],19],[[[51,[7]],18],19],[[[52,[[0,[17,7]]]],18],19],[[]],[[]],[[]],[[[13,[[52,[7]]]],[54,[7]],55],[[5,[4]]]],[[],24],[[],24],[[[20,[7]]]],[[[51,[7]]]],[[],11],[[],11],[[],11],0,[[]],[[]],[[]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],0,0,0,0,0,[[[20,[7]],56],[[5,[14]]]],[[[20,[7]]],5],[[[51,[7]]],5],[[[51,[7]],56],[[5,[14]]]],[[[20,[7]],56],[[5,[14]]]],[[[51,[7]],56],[[5,[14]]]],[[[20,[7]],56],[[5,[14]]]],[[[51,[7]],56],[[5,[14]]]],[[[20,[7]]],11],[[[51,[7]]],11],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[],36],[[],36],[[],36],[[[20,[7]]],11],[[[51,[7]]],11],[[[20,[7]],57,30],[[5,[4]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[[[58,[7]]],[[59,[7]]]],[[[39,[7]]],[[59,[7]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[59,[7]]],[[59,[7]]]],[[[58,[7]]],[[58,[7]]]],[[[39,[7]]],[[39,[7]]]],[[[60,[7]]],[[60,[7]]]],[[[61,[7]]],[[61,[7]]]],[[[62,[7]]],[[62,[7]]]],[[[42,[7]]],[[42,[7]]]],[[[63,[7]]],[[63,[7]]]],[[[40,[7]]],[[40,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[59,[7]]]],[[],[[58,[7]]]],[[],[[39,[7]]]],[[],[[60,[7]]]],[[],[[61,[7]]]],[[],[[62,[7]]]],[[],[[63,[7]]]],[[],[[40,[7]]]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[53,[[5,[[59,[7]],14]]]],[[],[[5,[[59,[7]]]]]],[53,[[5,[[58,[7]],14]]]],[[],[[5,[[58,[7]]]]]],[53,[[5,[[39,[7]],14]]]],[[],[[5,[[39,[7]]]]]],[53,[[5,[[60,[7]],14]]]],[[],[[5,[[60,[7]]]]]],[53,[[5,[[61,[7]],14]]]],[[],[[5,[[61,[7]]]]]],[[],[[5,[[62,[7]]]]]],[53,[[5,[[62,[7]],14]]]],[[],[[5,[[42,[7]]]]]],[53,[[5,[[42,[7]],14]]]],[53,[[5,[[63,[7]],14]]]],[[],[[5,[[63,[7]]]]]],[[],[[5,[[40,[7]]]]]],[53,[[5,[[40,[7]],14]]]],[53,[[5,[[59,[7]],14]]]],[53,[[5,[[58,[7]],14]]]],[53,[[5,[[39,[7]],14]]]],[53,[[5,[[60,[7]],14]]]],[53,[[5,[[61,[7]],14]]]],[53,[[5,[[62,[7]],14]]]],[53,[[5,[[42,[7]],14]]]],[53,[[5,[[63,[7]],14]]]],[53,[[5,[[40,[7]],14]]]],[53,[[5,[[59,[7]],14]]]],[53,[[5,[[58,[7]],14]]]],[53,[[5,[[39,[7]],14]]]],[53,[[5,[[60,[7]],14]]]],[53,[[5,[[61,[7]],14]]]],[53,[[5,[[62,[7]],14]]]],[53,[[5,[[42,[7]],14]]]],[53,[[5,[[63,[7]],14]]]],[53,[[5,[[40,[7]],14]]]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[[58,[7]]],64],[[[58,[7]]],[[5,[65,4]]]],[[[59,[7]],[59,[7]]],16],[[[58,[7]],[58,[7]]],16],[[[60,[7]],[60,[7]]],16],[[[62,[7]],[62,[7]]],16],[[[63,[7]],[63,[7]]],16],[[[40,[7]],[40,[7]]],16],[[[59,[7]],18],19],[[[58,[7]],18],19],[[[58,[7]],18],19],[[[39,[7]],18],19],[[[39,[7]],18],19],[[[60,[7]],18],19],[[[60,[7]],18],19],[[[61,[7]],18],19],[[[61,[7]],18],19],[[[62,[7]],18],19],[[[62,[7]],18],19],[[[42,[7]],18],19],[[[42,[7]],18],19],[[[63,[7]],18],19],[[[63,[7]],18],19],[[[40,[7]],18],19],[[[40,[7]],18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,[[5,[[58,[7]]]]]],[23,[[5,[[39,[7]]]]]],[23,[[5,[[60,[7]]]]]],[23,[[5,[[61,[7]]]]]],[23,[[5,[[62,[7]]]]]],[23,[[5,[[42,[7]]]]]],[23,[[5,[[63,[7]]]]]],[23,[[5,[[40,[7]]]]]],[[],[[39,[7]]]],[[],[[61,[7]]]],[[],[[42,[7]]]],[[],[[40,[7]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[59,[7]]]],[[[58,[7]]]],[[[60,[7]]]],[[[62,[7]]]],[[[63,[7]]]],[[[40,[7]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[[59,[7]]],66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[[[59,[7]],64],[[58,[7]]]],[[[39,[7]],63,24,12],[[31,[7]]]],[[[40,[7]],59,24,12],[[31,[7]]]],[[[42,[7]],22],[[5,[[67,[7]],4]]]],[[[42,[7]],68,21],[[5,[4]]]],[[[39,[7]]],[[58,[7]]]],[[[61,[7]]],[[60,[7]]]],[[[42,[7]]],[[62,[7]]]],[[[40,[7]]],[[63,[7]]]],[[[59,[7]],56],[[5,[14]]]],[[[59,[7]]],5],[[[58,[7]],56],[[5,[14]]]],[[[58,[7]]],5],[[[39,[7]]],5],[[[39,[7]],56],[[5,[14]]]],[[[60,[7]],56],[[5,[14]]]],[[[60,[7]]],5],[[[61,[7]],56],[[5,[14]]]],[[[61,[7]]],5],[[[62,[7]]],5],[[[62,[7]],56],[[5,[14]]]],[[[42,[7]],56],[[5,[14]]]],[[[42,[7]]],5],[[[63,[7]],56],[[5,[14]]]],[[[63,[7]]],5],[[[40,[7]]],5],[[[40,[7]],56],[[5,[14]]]],[[[59,[7]],56],[[5,[14]]]],[[[58,[7]],56],[[5,[14]]]],[[[39,[7]],56],[[5,[14]]]],[[[60,[7]],56],[[5,[14]]]],[[[61,[7]],56],[[5,[14]]]],[[[62,[7]],56],[[5,[14]]]],[[[42,[7]],56],[[5,[14]]]],[[[63,[7]],56],[[5,[14]]]],[[[40,[7]],56],[[5,[14]]]],[[[59,[7]],56],[[5,[14]]]],[[[58,[7]],56],[[5,[14]]]],[[[39,[7]],56],[[5,[14]]]],[[[60,[7]],56],[[5,[14]]]],[[[61,[7]],56],[[5,[14]]]],[[[62,[7]],56],[[5,[14]]]],[[[42,[7]],56],[[5,[14]]]],[[[63,[7]],56],[[5,[14]]]],[[[40,[7]],56],[[5,[14]]]],[[[59,[7]]],11],[[[58,[7]]],11],[[[39,[7]]],11],[[[60,[7]]],11],[[[61,[7]]],11],[[[62,[7]]],11],[[[42,[7]]],11],[[[63,[7]]],11],[[[40,[7]]],11],[[[39,[7]]],33],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],5],[[[35,[[58,[7]]]]],[[5,[[58,[7]]]]]],[[],5],[[],5],[[[35,[[39,[7]]]]],[[5,[[39,[7]]]]]],[[],5],[[[35,[[60,[7]]]]],[[5,[[60,[7]]]]]],[[],5],[[[35,[[61,[7]]]]],[[5,[[61,[7]]]]]],[[[35,[[62,[7]]]]],[[5,[[62,[7]]]]]],[[],5],[[],5],[[[35,[[42,[7]]]]],[[5,[[42,[7]]]]]],[[],5],[[[35,[[63,[7]]]]],[[5,[[63,[7]]]]]],[[],5],[[[35,[[40,[7]]]]],[[5,[[40,[7]]]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[59,[7]]],11],[[[58,[7]]],11],[[[39,[7]]],11],[[[60,[7]]],11],[[[61,[7]]],11],[[[62,[7]]],11],[[[42,[7]]],11],[[[63,[7]]],11],[[[40,[7]]],11],[[[58,[7]],33],[[5,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],0,[[[22,[7]]],[[22,[7]]]],[[[69,[7]]],[[69,[7]]]],[[]],[[]],[11],[11],[11],[11],[53,[[5,[[22,[7]],14]]]],[[],[[5,[[22,[7]]]]]],[53,[[5,[[69,[7]],14]]]],[[],[[5,[[69,[7]]]]]],[53,[[5,[[22,[7]],14]]]],[53,[[5,[[69,[7]],14]]]],[53,[[5,[[22,[7]],14]]]],[53,[[5,[[69,[7]],14]]]],[11],[11],[[[22,[7]],[22,[7]]],16],[[[69,[7]],[69,[7]]],16],0,[[[22,[7]],18],19],[[[69,[7]],18],19],[[]],[[]],[[[70,[7]],[71,[7]],[54,[7]],72],[[5,[4]]]],[[],24],[[],24],[[[22,[7]]]],[[[69,[7]]]],[[],11],[[],11],0,[[]],[[]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],0,0,0,0,0,0,[[[22,[7]]],5],[[[22,[7]],56],[[5,[14]]]],[[[69,[7]]],5],[[[69,[7]],56],[[5,[14]]]],[[[22,[7]],56],[[5,[14]]]],[[[69,[7]],56],[[5,[14]]]],[[[22,[7]],56],[[5,[14]]]],[[[69,[7]],56],[[5,[14]]]],[[[22,[7]]],11],[[[69,[7]]],11],[[]],[[]],[[],5],[[],5],[[],5],[[],5],0,[[],36],[[],36],[[[22,[7]]],11],[[[69,[7]]],11],[[[22,[7]],73,30],[[5,[4]]]],0,[[]],[[]],[[11,38,[75,[74]]],[[5,[[55,[7]],4]]]],[[11,38,[75,[74]]],[[5,[[57,[7]],4]]]],[[38,[75,[74]]],[[5,[[72,[7]],4]]]],[[38,[75,[74]]],[[5,[[73,[7]],4]]]],[[11,11,38,[75,[74]]],[[5,[[76,[7]],4]]]],[[11,11,38,[75,[74]]],[[5,[[77,[7]],4]]]],[[[75,[74]]],[[5,[78,4]]]],[[11,38,78,[75,[74]]],[[5,[4]]]],[[11,38,78,[75,[74]]],[[5,[4]]]],[[38,78,[75,[74]]],[[5,[4]]]],[[38,78,[75,[74]]],[[5,[4]]]],[[11,11,38,78,[75,[74]]],[[5,[4]]]],[[11,11,38,78,[75,[74]]],[[5,[4]]]],[[11,[75,[74]]],[[5,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[11,[[5,[78,4]]]],0,0,[11,[[5,[78,4]]]],[11,[[5,[78,4]]]],0,0,0,[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[[55,[[0,[6,7]]]]],[[55,[[0,[6,7]]]]]],[[[57,[[0,[6,7]]]]],[[57,[[0,[6,7]]]]]],[[[79,[[0,[6,7]]]]],[[79,[[0,[6,7]]]]]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[[],[[5,[[55,[7]]]]]],[53,[[5,[[55,[7]],14]]]],[53,[[5,[[57,[7]],14]]]],[[],[[5,[[57,[7]]]]]],[53,[[5,[[55,[7]],14]]]],[53,[[5,[[57,[7]],14]]]],[53,[[5,[[55,[7]],14]]]],[53,[[5,[[57,[7]],14]]]],[11],[11],[11],[[[55,[[0,[15,7]]]],55],16],[[[57,[[0,[15,7]]]],57],16],0,[[[55,[[0,[17,7]]]],18],19],[[[57,[[0,[17,7]]]],18],19],[[[79,[[0,[17,7]]]],18],19],[80,[[55,[7]]]],[[]],[80,[[57,[7]]]],[[]],[[]],[[],11],[[],11],[[],11],0,[[]],[[]],[[]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],0,0,[[[55,[[0,[15,7]]]],55],16],[[[57,[[0,[15,7]]]],57],16],[[[55,[7]]],11],[[[57,[7]]],11],[[[55,[7]]],11],[[[57,[7]]],11],0,[[78,11,38],[[5,[4]]]],[[[55,[7]],56],[[5,[14]]]],[[[55,[7]]],5],[[[57,[7]]],5],[[[57,[7]],56],[[5,[14]]]],[[[55,[7]],56],[[5,[14]]]],[[[57,[7]],56],[[5,[14]]]],[[[55,[7]],56],[[5,[14]]]],[[[57,[7]],56],[[5,[14]]]],[[[55,[7]]],11],[[[57,[7]]],11],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],36],[[],36],[[],36],[[[55,[7]]],11],[[[57,[7]]],11],[[]],[[]],[[]],0,0,0,[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[72,[[0,[6,7]]]]],[[72,[[0,[6,7]]]]]],[[[73,[[0,[6,7]]]]],[[73,[[0,[6,7]]]]]],[[[81,[[0,[6,7]]]]],[[81,[[0,[6,7]]]]]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[53,[[5,[[72,[7]],14]]]],[[],[[5,[[72,[7]]]]]],[[],[[5,[[73,[7]]]]]],[53,[[5,[[73,[7]],14]]]],[53,[[5,[[72,[7]],14]]]],[53,[[5,[[73,[7]],14]]]],[53,[[5,[[72,[7]],14]]]],[53,[[5,[[73,[7]],14]]]],[11],[11],[11],[[[72,[[0,[15,7]]]],72],16],[[[73,[[0,[15,7]]]],73],16],0,[[[72,[[0,[17,7]]]],18],19],[[[73,[[0,[17,7]]]],18],19],[[[81,[[0,[17,7]]]],18],19],[80,[[72,[7]]]],[[]],[[]],[80,[[73,[7]]]],[[]],[[],11],[[],11],[[],11],0,[[]],[[]],[[]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],0,0,0,0,0,0,0,[[[72,[[0,[15,7]]]],72],16],[[[73,[[0,[15,7]]]],73],16],[[78,38],[[5,[4]]]],[[[72,[7]],56],[[5,[14]]]],[[[72,[7]]],5],[[[73,[7]]],5],[[[73,[7]],56],[[5,[14]]]],[[[72,[7]],56],[[5,[14]]]],[[[73,[7]],56],[[5,[14]]]],[[[72,[7]],56],[[5,[14]]]],[[[73,[7]],56],[[5,[14]]]],[[[72,[7]]],11],[[[73,[7]]],11],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],36],[[],36],[[],36],[[[72,[7]]],11],[[[73,[7]]],11],0,[[]],[[]],[[]],0,0,0,[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[[76,[[0,[6,7]]]]],[[76,[[0,[6,7]]]]]],[[[77,[[0,[6,7]]]]],[[77,[[0,[6,7]]]]]],[[[82,[[0,[6,7]]]]],[[82,[[0,[6,7]]]]]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[[],[[5,[[76,[7]]]]]],[53,[[5,[[76,[7]],14]]]],[53,[[5,[[77,[7]],14]]]],[[],[[5,[[77,[7]]]]]],[53,[[5,[[76,[7]],14]]]],[53,[[5,[[77,[7]],14]]]],[53,[[5,[[76,[7]],14]]]],[53,[[5,[[77,[7]],14]]]],[11],[11],[11],[[[76,[[0,[15,7]]]],76],16],[[[77,[[0,[15,7]]]],77],16],0,[[[76,[[0,[17,7]]]],18],19],[[[77,[[0,[17,7]]]],18],19],[[[82,[[0,[17,7]]]],18],19],[[]],[80,[[76,[7]]]],[80,[[77,[7]]]],[76,[[77,[7]]]],[[]],[[]],[[],11],[[],11],[[],11],0,[[]],[[]],[[]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],0,0,0,0,[[[76,[[0,[15,7]]]],76],16],[[[77,[[0,[15,7]]]],77],16],[[[76,[7]]],11],[[[77,[7]]],11],[[[76,[7]]],11],[[[77,[7]]],11],0,[[78,11,11,38],[[5,[4]]]],[[[76,[7]],56],[[5,[14]]]],[[[76,[7]]],5],[[[77,[7]]],5],[[[77,[7]],56],[[5,[14]]]],[[[76,[7]],56],[[5,[14]]]],[[[77,[7]],56],[[5,[14]]]],[[[76,[7]],56],[[5,[14]]]],[[[77,[7]],56],[[5,[14]]]],[[[76,[7]]],11],[[[77,[7]]],11],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],36],[[],36],[[],36],[[[76,[7]]],11],[[[77,[7]]],11],0,0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,[[3,3],3],[[3,3]],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[83,83],[[[71,[7]]],[[71,[7]]]],[[[84,[7]]],[[84,[7]]]],[3,3],[[[48,[7]]],[[48,[7]]]],[85,85],[[[86,[7]]],[[86,[7]]]],[[[68,[7]]],[[68,[7]]]],[[[87,[7]]],[[87,[7]]]],[[[31,[7]]],[[31,[7]]]],[[[12,[7]]],[[12,[7]]]],[88,88],[[[70,[7]]],[[70,[7]]]],[[[89,[7]]],[[89,[7]]]],[[[90,[7]]],[[90,[7]]]],[[[91,[7]]],[[91,[7]]]],[[[67,[7]]],[[67,[7]]]],[92,92],[[[93,[7]]],[[93,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,3],94],[[[48,[7]],[48,[7]]],94],[[[31,[7]],[31,[7]]],94],0,[[[59,[7]],[13,[[89,[7]]]],24,61],[[5,[[90,[7]],4]]]],[[[86,[7]]],60],[[92,39,12],[[5,[[70,[7]],4]]]],[[],[[71,[7]]]],[[],[[84,[7]]]],[[],3],[[],[[48,[7]]]],[[],85],[[],[[86,[7]]]],[[],[[68,[7]]]],[[],[[87,[7]]]],[[],[[12,[7]]]],[[],88],[[],[[70,[7]]]],[[],[[89,[7]]]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[53,[[5,[[71,[7]],14]]]],[[],[[5,[[71,[7]]]]]],[[],[[5,[[84,[7]]]]]],[53,[[5,[[84,[7]],14]]]],[[],[[5,[3]]]],[53,[[5,[3,14]]]],[53,[[5,[[48,[7]],14]]]],[[],[[5,[[48,[7]]]]]],[[],[[5,[85,14]]]],[[],[[5,[85]]]],[[],[[5,[[86,[7]]]]]],[53,[[5,[[86,[7]],14]]]],[53,[[5,[[68,[7]],14]]]],[[],[[5,[[68,[7]]]]]],[53,[[5,[[87,[7]],14]]]],[[],[[5,[[87,[7]]]]]],[53,[[5,[[31,[7]],14]]]],[[],[[5,[[31,[7]]]]]],[53,[[5,[[12,[7]],14]]]],[[],[[5,[[12,[7]]]]]],[[],[[5,[88]]]],[[],[[5,[88,14]]]],[[],[[5,[[70,[7]]]]]],[53,[[5,[[70,[7]],14]]]],[[],[[5,[[89,[7]]]]]],[53,[[5,[[89,[7]],14]]]],[53,[[5,[[90,[7]],14]]]],[[],[[5,[[90,[7]]]]]],[[],[[5,[[91,[7]]]]]],[53,[[5,[[91,[7]],14]]]],[53,[[5,[92,14]]]],[[],[[5,[92]]]],[53,[[5,[[71,[7]],14]]]],[53,[[5,[[84,[7]],14]]]],[53,[[5,[[48,[7]],14]]]],[53,[[5,[[86,[7]],14]]]],[53,[[5,[[68,[7]],14]]]],[53,[[5,[[87,[7]],14]]]],[53,[[5,[[31,[7]],14]]]],[53,[[5,[[12,[7]],14]]]],[53,[[5,[[70,[7]],14]]]],[53,[[5,[[89,[7]],14]]]],[53,[[5,[[90,[7]],14]]]],[53,[[5,[[91,[7]],14]]]],[53,[[5,[92,14]]]],[53,[[5,[[71,[7]],14]]]],[53,[[5,[[84,[7]],14]]]],[53,[[5,[[48,[7]],14]]]],[53,[[5,[[86,[7]],14]]]],[53,[[5,[[68,[7]],14]]]],[53,[[5,[[87,[7]],14]]]],[53,[[5,[[31,[7]],14]]]],[53,[[5,[[12,[7]],14]]]],[53,[[5,[[70,[7]],14]]]],[53,[[5,[[89,[7]],14]]]],[53,[[5,[[90,[7]],14]]]],[53,[[5,[[91,[7]],14]]]],[53,[[5,[92,14]]]],[3,3],[3],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[48,[7]]]],[[],[[68,[7]]]],[88],[[[71,[7]],[71,[7]]],16],[[[84,[7]],[84,[7]]],16],[[3,3],16],[[[48,[7]],[48,[7]]],16],[[85,85],16],[[[86,[7]],[86,[7]]],16],[[[68,[7]],[68,[7]]],16],[[[87,[7]],[87,[7]]],16],[[[31,[7]],[31,[7]]],16],[[[12,[7]],[12,[7]]],16],[[88,88],16],[[[70,[7]],[70,[7]]],16],[[[89,[7]],[89,[7]]],16],[[[90,[7]],[90,[7]]],16],[[[91,[7]],[91,[7]]],16],[[[67,[7]],[67,[7]]],16],[[92,92],16],[[[90,[7]]],24],0,0,0,[[83,18],19],[[[71,[7]],18],19],[[[71,[7]],18],19],[[[84,[7]],18],19],[[[84,[7]],18],19],[[3,18],19],[[3,18],19],[[3,18],19],[[[48,[7]],18],19],[[[48,[7]],18],19],[[85,18],19],[[[86,[7]],18],19],[[[68,[7]],18],19],[[[68,[7]],18],19],[[[87,[7]],18],19],[[[87,[7]],18],19],[[[31,[7]],18],19],[[[31,[7]],18],19],[[[12,[7]],18],19],[[[12,[7]],18],19],[[88,18],19],[[[70,[7]],18],19],[[[89,[7]],18],19],[[[89,[7]],18],19],[[[90,[7]],18],19],[[[91,[7]],18],19],[[[91,[7]],18],19],[[[67,[7]],18],19],[[92,18],19],[[92,18],19],[[[93,[7]],18],19],0,[[[86,[7]]],63],[[]],[[]],[[]],[[]],[95,3],[[]],[24,3],[38,3],[96,3],[[]],[80,85],[[]],[[]],[[]],[[]],[[]],[70,[[12,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[12,[7]]]],[70,[[5,[92,4]]]],[23,[[5,[[71,[7]]]]]],[23,[[5,[[84,[7]]]]]],[23,[[5,[3]]]],[23,[[5,[[48,[7]]]]]],[23,[[5,[[68,[7]]]]]],[23,[[5,[[87,[7]]]]]],[23,[[5,[[31,[7]]]]]],[23,[[5,[[12,[7]]]]]],[23,[[5,[[89,[7]]]]]],[23,[[5,[[91,[7]]]]]],[23,[[5,[92]]]],[[],[[13,[3]]]],[[],[[71,[7]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[84,[7]]]],[3],[[[48,[7]]]],[85],[[[86,[7]]]],[[[68,[7]]]],[[[87,[7]]]],[[[31,[7]]]],[[[12,[7]]]],[88],[[[70,[7]]]],[[[89,[7]]]],[[[90,[7]]]],[[[91,[7]]]],[92],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[85],[[[91,[7]]],97],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[[[86,[7]]],16],[[[86,[7]]],16],[[[86,[7]]],16],[[[68,[7]]],16],[[[70,[7]]],16],[[[90,[7]],24],16],[[[86,[7]]],16],[[[68,[7]]],16],[[[86,[7]]],16],[[[86,[7]]],16],[[[86,[7]]],16],[3,3],[3],[[],[[48,[7]]]],[[],[[68,[7]]]],[[3,3],16],[[85,85],16],[[92,92],16],[[[93,[7]],3],[[5,[4]]]],[[[71,[7]]],[[84,[7]]]],[[],85],[[[48,[7]],[86,[7]]],[[5,[[68,[7]],4]]]],[[3,[68,[7]],[58,[7]],88],[[70,[7]]]],[[],[[5,[[89,[7]],4]]]],[97,[[91,[7]]]],[[[71,[7]]],[[48,[7]]]],[[],[[48,[7]]]],0,[[3,3],[[75,[94]]]],[[[48,[7]],[48,[7]]],[[75,[94]]]],[[[31,[7]],[31,[7]]],[[75,[94]]]],[[[68,[7]]],86],0,[[],[[87,[7]]]],[[],85],[[],[[86,[7]]]],[[],[[68,[7]]]],[[],[[70,[7]]]],[[]],[[],[[31,[7]]]],[3,3],[3],[[[86,[7]]],[[5,[[86,[7]],4]]]],[[[86,[7]]],[[5,[[86,[7]],4]]]],[[[86,[7]]],[[5,[[86,[7]],4]]]],[[[86,[7]]],[[5,[[86,[7]],4]]]],[[[86,[7]],11],[[5,[[86,[7]],4]]]],[[[86,[7]]],85],[[[86,[7]]],[[5,[[86,[7]],4]]]],[[[86,[7]]],3],[[[86,[7]]],[[5,[[86,[7]],4]]]],0,[[[71,[7]]],5],[[[71,[7]],56],[[5,[14]]]],[[[84,[7]]],5],[[[84,[7]],56],[[5,[14]]]],[3,5],[[3,56],[[5,[14]]]],[[[48,[7]],56],[[5,[14]]]],[[[48,[7]]],5],[85,5],[85,[[5,[14]]]],[[[86,[7]]],5],[[[86,[7]],56],[[5,[14]]]],[[[68,[7]],56],[[5,[14]]]],[[[68,[7]]],5],[[[87,[7]],56],[[5,[14]]]],[[[87,[7]]],5],[[[31,[7]]],5],[[[31,[7]],56],[[5,[14]]]],[[[12,[7]]],5],[[[12,[7]],56],[[5,[14]]]],[88,5],[88,[[5,[14]]]],[[[70,[7]]],5],[[[70,[7]],56],[[5,[14]]]],[[[89,[7]],56],[[5,[14]]]],[[[89,[7]]],5],[[[90,[7]]],5],[[[90,[7]],56],[[5,[14]]]],[[[91,[7]]],5],[[[91,[7]],56],[[5,[14]]]],[[92,56],[[5,[14]]]],[92,5],[[[71,[7]],56],[[5,[14]]]],[[[84,[7]],56],[[5,[14]]]],[[[48,[7]],56],[[5,[14]]]],[[[86,[7]],56],[[5,[14]]]],[[[68,[7]],56],[[5,[14]]]],[[[87,[7]],56],[[5,[14]]]],[[[31,[7]],56],[[5,[14]]]],[[[12,[7]],56],[[5,[14]]]],[[[70,[7]],56],[[5,[14]]]],[[[89,[7]],56],[[5,[14]]]],[[[90,[7]],56],[[5,[14]]]],[[[91,[7]],56],[[5,[14]]]],[[92,56],[[5,[14]]]],[[[71,[7]],56],[[5,[14]]]],[[[84,[7]],56],[[5,[14]]]],[[[48,[7]],56],[[5,[14]]]],[[[86,[7]],56],[[5,[14]]]],[[[68,[7]],56],[[5,[14]]]],[[[87,[7]],56],[[5,[14]]]],[[[31,[7]],56],[[5,[14]]]],[[[12,[7]],56],[[5,[14]]]],[[[70,[7]],56],[[5,[14]]]],[[[89,[7]],56],[[5,[14]]]],[[[90,[7]],56],[[5,[14]]]],[[[91,[7]],56],[[5,[14]]]],[[92,56],[[5,[14]]]],[[[71,[7]]],11],[[[84,[7]]],11],[3,11],[[[48,[7]]],11],[85,11],[[[86,[7]]],11],[[[68,[7]]],11],[[[87,[7]]],11],[[[31,[7]]],11],[[[12,[7]]],11],[88,11],[[[70,[7]]],11],[[[89,[7]]],11],[[[90,[7]]],11],[[[91,[7]]],11],[92,11],[[[86,[7]],[60,[7]]],[[86,[7]]]],[[[86,[7]],[63,[7]]],[[86,[7]]]],[[[86,[7]],85],[[86,[7]]]],[[[86,[7]],3],[[86,[7]]]],[[[86,[7]],[62,[7]]],[[86,[7]]]],[[3,3],3],[[3,3]],[98,3],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[[12,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[85],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],5],[[],5],[[[35,[[71,[7]]]]],[[5,[[71,[7]]]]]],[[],5],[[],5],[[[35,[[84,[7]]]]],[[5,[[84,[7]]]]]],[[],5],[99,[[5,[3]]]],[[[35,[[48,[7]]]]],[[5,[[48,[7]]]]]],[[],5],[[],5],[[],5],[[],5],[[[35,[[68,[7]]]]],[[5,[[68,[7]]]]]],[[],5],[[[35,[[87,[7]]]]],[[5,[[87,[7]]]]]],[[],5],[[[35,[[31,[7]]]]],[[5,[[31,[7]]]]]],[[],5],[[[35,[[12,[7]]]]],[[5,[[12,[7]]]]]],[[],5],[[],5],[[[35,[[89,[7]]]]],[[5,[[89,[7]]]]]],[[],5],[[],5],[[[35,[[91,[7]]]]],[[5,[[91,[7]]]]]],[[],5],[[],5],[[[35,[92]]],[[5,[92]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[71,[7]]],11],[[[84,[7]]],11],[[[48,[7]]],11],[[[86,[7]]],11],[[[68,[7]]],11],[[[87,[7]]],11],[[[31,[7]]],11],[[[12,[7]]],11],[[[70,[7]]],11],[[[89,[7]]],11],[[[90,[7]]],11],[[[91,[7]]],11],[92,11],0,[[[89,[7]]],[[5,[[13,[38]],4]]]],[[[48,[7]]],[[5,[4]]]],[[[86,[7]]],62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[1],[1],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[7]]],[[21,[7]]]],[[[100,[7]]],[[100,[7]]]],[[[101,[7]]],[[101,[7]]]],[[]],[[]],[[]],0,[11],[11],[11],[11],[11],[11],[[],[[5,[[21,[7]]]]]],[53,[[5,[[21,[7]],14]]]],[53,[[5,[[100,[7]],14]]]],[[],[[5,[[100,[7]]]]]],[53,[[5,[[21,[7]],14]]]],[53,[[5,[[100,[7]],14]]]],[53,[[5,[[21,[7]],14]]]],[53,[[5,[[100,[7]],14]]]],[11],[11],[11],[[[21,[7]],[21,[7]]],16],[[[100,[7]],[100,[7]]],16],0,0,[[[21,[7]],18],19],[[[100,[7]],18],19],[[[101,[7]],18],19],[[]],[[]],[[]],[[[93,[7]]],[[101,[7]]]],[[[13,[[101,[7]]]],3,24,76],[[5,[4]]]],[[[13,[[101,[7]]]],[54,[7]],24,76,[13,[38]]],[[5,[4]]]],[[],24],[[],24],[[[21,[7]]]],[[[100,[7]]]],[[],11],[[],11],[[],11],0,[[]],[[]],[[]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],0,0,0,0,0,[[[21,[7]],56],[[5,[14]]]],[[[21,[7]]],5],[[[100,[7]]],5],[[[100,[7]],56],[[5,[14]]]],[[[21,[7]],56],[[5,[14]]]],[[[100,[7]],56],[[5,[14]]]],[[[21,[7]],56],[[5,[14]]]],[[[100,[7]],56],[[5,[14]]]],[[[21,[7]]],11],[[[100,[7]]],11],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[],36],[[],36],[[],36],[[[21,[7]]],11],[[[100,[7]]],11],0,[[[21,[7]],77,30,24],[[5,[4]]]],0,[[]],[[]],[[]],0,[[83,11,11,38],[[5,[11,4]]]],0,0,0,0,0,[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[7]],55],[[5,[4]]]],[[[43,[7]],72],[[5,[4]]]],[[[44,[7]],76,24,[13,[38]]],[[5,[4]]]],[[[102,[[0,[6,7]]]]],[[102,[[0,[6,7]]]]]],[[[43,[[0,[6,7]]]]],[[43,[[0,[6,7]]]]]],[[[41,[[0,[6,7]]]]],[[41,[[0,[6,7]]]]]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,[[[102,[[0,[17,7]]]],18],19],[[[43,[[0,[17,7]]]],18],19],[[[41,[[0,[17,7]]]],18],19],[[]],[[]],[[]],[[]],[[11,11,11,38],[[102,[7]]]],[[],11],[[],11],[[],11],[[],11],0,0,0,[[]],[[]],[[]],[[]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[[[27,[26]]],[[27,[2,26]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],0,[[38,3,3,3,39,39,42],[[43,[7]]]],[[38,3,3,39,[13,[40]]],[[41,[7]]]],[[11,11,[75,[38]],[13,[39]]],[[44,[7]]]],0,0,[[[44,[7]],3],[[44,[7]]]],[[[44,[7]],24],[[44,[7]]]],[[[44,[7]],3],[[44,[7]]]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[],36],[[],36],[[],36],[[],36],0,0,[[]],[[]],[[]],[[]]],"p":[[3,"Private"],[8,"Any"],[3,"Amount"],[4,"TxnApiError"],[4,"Result"],[8,"Clone"],[8,"CapConfig"],[4,"TransactionNote"],[4,"TransactionVerifyingKey"],[3,"Commitment"],[15,"usize"],[3,"RecordCommitment"],[3,"Vec"],[4,"SerializationError"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"FreezeNote"],[3,"TransferNote"],[3,"MintNote"],[15,"str"],[15,"u64"],[8,"Hash"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"NodeValue"],[3,"Nullifier"],[3,"KeyPair"],[3,"Signature"],[3,"String"],[3,"TaggedBlob"],[3,"TypeId"],[3,"Proof"],[15,"u8"],[3,"UserKeyPair"],[3,"FreezerKeyPair"],[3,"FreezeParamsBuilder"],[3,"ViewerKeyPair"],[3,"MintParamsBuilder"],[3,"TransferParamsBuilder"],[8,"Error"],[8,"Fn"],[3,"Config"],[3,"AssetCode"],[4,"DeserializationError"],[4,"CircuitError"],[3,"FreezeAuxInfo"],[3,"FreezeNoteInput"],[8,"Read"],[3,"TxnFeeInfo"],[3,"FreezeProvingKey"],[8,"Write"],[3,"FreezeVerifyingKey"],[3,"UserPubKey"],[3,"UserAddress"],[3,"CredIssuerPubKey"],[3,"CredIssuerKeyPair"],[3,"ViewerPubKey"],[3,"FreezerPubKey"],[3,"EncKey"],[3,"Ciphertext"],[3,"GroupProjective"],[3,"ViewableData"],[3,"AssetDefinition"],[3,"MintAuxInfo"],[3,"RecordOpening"],[3,"AssetCodeSeed"],[3,"MintProvingKey"],[3,"MintVerifyingKey"],[3,"PathBuf"],[4,"Option"],[3,"TransferProvingKey"],[3,"TransferVerifyingKey"],[3,"UniversalSrs"],[3,"FreezePublicInput"],[3,"CanonicalBytes"],[3,"MintPublicInput"],[3,"TransferPublicInput"],[4,"NoteType"],[3,"InternalAssetCode"],[3,"RevealMap"],[3,"AssetPolicy"],[3,"BlindFactor"],[4,"FreezeFlag"],[3,"IdentityAttribute"],[3,"ExpirableCredential"],[3,"ViewableMemo"],[3,"ReceiverMemo"],[3,"FeeInput"],[4,"Ordering"],[15,"u32"],[15,"u128"],[3,"Ciphertext"],[8,"Iterator"],[3,"U256"],[3,"AuxInfo"],[3,"TransferNoteInput"],[3,"TxnsParams"],[13,"Transfer"],[13,"Mint"],[13,"Freeze"],[13,"Transfer"],[13,"Mint"],[13,"Freeze"],[13,"ArkSerializationError"],[13,"SerdeError"],[13,"FailedPrimitives"],[13,"FailedSnark"],[13,"FailedConstraintSystem"],[13,"FailedAssetCodeVerification"],[13,"FailedCredentialCreation"],[13,"FailedCredentialVerification"],[13,"FailedTransactionVerification"],[13,"FailedSerialization"],[13,"FailedReceiverMemoSignature"],[13,"FailedTxMemoSignature"],[13,"FailedViewableMemoDecryption"],[13,"IoError"],[13,"InvalidParameter"],[13,"DeserializationError"],[13,"IncorrectFee"],[13,"ParametersGenerationError"],[13,"InternalError"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
